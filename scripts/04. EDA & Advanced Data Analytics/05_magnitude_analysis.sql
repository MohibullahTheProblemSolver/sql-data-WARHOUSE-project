/*
===============================================================================
Magnitude Analysis
===============================================================================
Purpose:
    - To quantify data and group results by specific dimensions.
    - For understanding data distribution across categories.

SQL Functions Used:
    - Aggregate Functions: SUM(), COUNT(), AVG()
    - GROUP BY, ORDER BY
===============================================================================
*/

-- Find total customers by countries
SELECT 
country,
COUNT(customer_key) AS total_customer
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customer DESC;

-- Find total customers by gender
SELECT
gender,
COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-- Find total products by category
SELECT
Category,
COUNT(product_key) AS total_product
FROM gold.dim_products
GROUP BY Category
ORDER BY total_product DESC;

-- What is the average costs in each category?
SELECT
Category,
AVG(product_cost) AS avg_cost
FROM gold.dim_products
GROUP BY Category
ORDER BY avg_cost DESC;

-- What is the total revenue generated for each category?
SELECT
p.Category,
SUM(f.Sales) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON f.product_key = p.product_key
GROUP BY p.Category
ORDER BY total_revenue DESC;

-- What is the total revenue generated by each customer?
SELECT
c.customer_key,
c.first_name,
c.last_name,
SUM(f.Sales) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON f.customer_key = c.customer_key
GROUP BY c.customer_key,
		 c.first_name,
		 c.last_name
ORDER BY total_revenue DESC
-- What is the distribution of sold items across countries?
SELECT
c.country,
SUM(Quantity) total_sold_item
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON c.customer_key = f.customer_key
GROUP BY c.country
ORDER BY total_sold_item DESC
